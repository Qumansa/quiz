{
  "easy": [
    {
      "id": 1,
      "description": "Для чего предназначен тег doctype?",
      "answers": [
        "Для прикрепления в форме документов с типом .doc",
        "Для указания версии HTML, которая используется в документе",
        "Тег специально введён для медицинских сайтов для указания специальности доктора",
        "Для указания типа документа"
      ],
      "correctAnswer": "Для указания версии HTML, которая используется в документе",
      "skipped": false
    },
    {
      "id": 2,
      "description": "Какое число заголовков первого уровня считается допустимым?",
      "answers": [
        "4",
        "1",
        "2",
        "3"
      ],
      "correctAnswer": "1",
      "skipped": false
    },
    {
      "id": 3,
      "description": "С помощью какого тега следует разделять абзацы?",
      "answers": [
        "<span>",
        "<b>",
        "<p>",
        "<br>"
      ],
      "correctAnswer": "<p>",
      "skipped": false
    },
    {
      "id": 4,
      "description": "С помощью какого свойства таблицы можно убрать отступы между границами ячеек?",
      "answers": [
        "clap",
        "bold",
        "border-collapse",
        "shift"
      ],
      "correctAnswer": "border-collapse",
      "skipped": false
    },
    {
      "id": 5,
      "description": "Как выделить текст курсивом?",
      "answers": [
        "<p>курсив</p>",
        "<em>курсив</em>",
        "<c>курсив</c>",
        "<hr>курсив</hr>"
      ],
      "correctAnswer": "<em>курсив</em>",
      "skipped": false
    },
    {
      "id": 6,
      "description": "Каким является следующий адрес ссылки: ./pages/page2.html",
      "answers": [
        "Относительным",
        "Абсолютным",
        "Смешанным",
        "Уникальным"
      ],
      "correctAnswer": "Относительным",
      "skipped": false
    },
    {
      "id": 7,
      "description": "С помощью какого тега нужно задавать подписи к полям формы?",
      "answers": [
        "label",
        "id",
        "type",
        "field"
      ],
      "correctAnswer": "label",
      "skipped": false
    },
    {
      "id": 8,
      "description": "Как вставить картинку в HTML?",
      "answers": [
        "<image>http://site.com/image.jpg</image>",
        "<img src='http://site.com/image.jpg'>",
        "<image source='http://site.com/image.jpg'>",
        "<img>http://site.com/image.jpg</img>"
      ],
      "correctAnswer": "<img src='http://site.com/image.jpg'>",
      "skipped": false
    },
    {
      "id": 9,
      "description": "Какой тег при создании страницы не является обязательным?",
      "answers": [
        "head",
        "doctype",
        "body",
        "strong"
      ],
      "correctAnswer": "strong",
      "skipped": false
    },
    {
      "id": 10,
      "description": "С помощью какого атрибута можно задать текст для картинки, который будет отображен, если её не удастся загрузить?",
      "answers": [
        "title",
        "alt",
        "popup",
        "caption"
      ],
      "correctAnswer": "alt",
      "skipped": false
    }
  ],
  "medium": [
    {
      "id": 1,
      "description": "Расшифруйте аббревиатуру DOM",
      "answers": [
        "Document Object Model",
        "Digital Optical Modulation",
        "Domestic Object Mode",
        "Document Object Module"
      ],
      "correctAnswer": "Document Object Model",
      "skipped": false
    },
    {
      "id": 2,
      "description": "Что выведет этот код? let y = 1; let x = y = 2; alert(x)",
      "answers": [
        "1",
        "2",
        "x",
        "у = 2"
      ],
      "correctAnswer": "2",
      "skipped": false
    },
    {
      "id": 3,
      "description": "Как объявить функцию в JavaScript?",
      "answers": [
        "function:myFunction() {}",
        "function myFunction() {}",
        "function = myFunction() {}",
        "function = New myFunction() {}"
      ],
      "correctAnswer": "function myFunction() {}",
      "skipped": false
    },
    {
      "id": 4,
      "description": "JSON - это...",
      "answers": [
        "JavaScript Object Notation",
        "название следующей версии JavaScript",
        "JavaScript Over Network",
        "Название компании, создавшая JavaScript"
      ],
      "correctAnswer": "JavaScript Object Notation",
      "skipped": false
    },
    {
      "id": 5,
      "description": "Что будет записано в переменную test? const a = 5; const b = 5 != a ? 'Yes' : 'No'",
      "answers": [
        "Будет ошибка",
        "5",
        "'No'",
        "'Yes'"
      ],
      "correctAnswer": "'No'",
      "skipped": false
    },
    {
      "id": 6,
      "description": "Какие циклы есть в языке JavaScript?",
      "answers": [
        "for, forMap, foreach, while",
        "for, while, do while",
        "for, forMap, foreach, while, do while",
        "for, while, do while, foreach"
      ],
      "correctAnswer": "for, while, do while, foreach",
      "skipped": false
    },
    {
      "id": 7,
      "description": "В чем разница между confirm и prompt?",
      "answers": [
        "ничем не отличаются",
        "confirm вызывает диалоговое окно с полем для ввода, prompt - окно с подтверждением",
        "prompt вызывает диалоговое окно с полем для ввода, confirm - окно с подтверждением",
        "confirm вызывает диалоговое окно с полем ввода, куда можно вводить только строки, prompt - строки и числа"
      ],
      "correctAnswer": "prompt вызывает диалоговое окно с полем для ввода, confirm - окно с подтверждением",
      "skipped": false
    },
    {
      "id": 8,
      "description": "Этот метод разбивает строку на подстроки, используя заданный разделитель, и возвращает их в виде массива.",
      "answers": [
        "filter()",
        "split()",
        "parseInt()",
        "slice()"
      ],
      "correctAnswer": "split()",
      "skipped": false
    },
    {
      "id": 9,
      "description": "Метод, который округляет аргумент до ближайшего большего целого.",
      "answers": [
        "Math.asin()",
        "Math.ceil()",
        "Math.max()",
        "Math.floor()"
      ],
      "correctAnswer": "Math.ceil()",
      "skipped": false
    },
    {
      "id": 10,
      "description": "Что такое замыкание в JavaScript?",
      "answers": [
        "Это способность функции вызывать саму себя",
        "Это способность функции запоминать все переменные",
        "Это способность функции запоминать область видимости, в которой эта функция была объявлена",
        "Это явление, когда функция вызвана внутри другой функции"
      ],
      "correctAnswer": "Это способность функции запоминать область видимости, в которой эта функция была объявлена",
      "skipped": false
    }
  ],
  "hard": [
    {
      "id": 1,
      "description": "React в основном используется для...",
      "answers": [
        "баз данных",
        "подключения к серверу",
        "создания пользовательского интерфейса",
        "разработки платформы"
      ],
      "correctAnswer": "создания пользовательского интерфейса",
      "skipped": false
    },
    {
      "id": 2,
      "description": "Как называется данная структура в React? const Header = (props) => <h1>{props.text}</h1>",
      "answers": [
        "элемент",
        "компонент",
        "фрагмент",
        "сущность"
      ],
      "correctAnswer": "компонент",
      "skipped": false
    },
    {
      "id": 3,
      "description": "Какой атрибут обязателен при рендеринге компонентов списка?",
      "answers": [
        "key",
        "index",
        "data-index",
        "id"
      ],
      "correctAnswer": "key",
      "skipped": false
    },
    {
      "id": 4,
      "description": "Какой метод вызывается в React Component после того, как компонент отображается в первый раз?",
      "answers": [
        "componentDidUpdate",
        "componentDidMount",
        "componentMounted",
        "componentUpdated"
      ],
      "correctAnswer": "componentDidMount",
      "skipped": false
    },
    {
      "id": 5,
      "description": "Как создать встроенный стиль в JSX, указывая font-size: 12px и color: red?",
      "answers": [
        "style={{font-size: 12, color: 'red'}}",
        "style={{fontSize: '12px', color: 'red'}}",
        "style={fontSize: '12px', color: 'red'}",
        "style={{font-size: 12px, color: 'red'}}"
      ],
      "correctAnswer": "style={{fontSize: '12px', color: 'red'}}",
      "skipped": false
    },
    {
      "id": 6,
      "description": "Каким образом можно получить доступ к функции fetch() из элемента h1 в JSX?",
      "answers": [
        "${fetch()}",
        "${fetch}",
        "{fetch}",
        "{fetch()}"
      ],
      "correctAnswer": "{fetch()}",
      "skipped": false
    },
    {
      "id": 7,
      "description": "Какой из нижеприведенных вариантов используется для передачи данных компоненту 'извне'?",
      "answers": [
        "render-функция с аргументами",
        "props",
        "setState",
        "PropTypes"
      ],
      "correctAnswer": "props",
      "skipped": false
    },
    {
      "id": 8,
      "description": "Что происходит при вызове setState() внутри метода render()?",
      "answers": [
        "Повторяющаяся ошибка ключа",
        "На экране появятся повторяющиеся выходные данные",
        "Ошибка переполнения стека",
        "Ничего не произойдет"
      ],
      "correctAnswer": "Ошибка переполнения стека",
      "skipped": false
    },
    {
      "id": 9,
      "description": "Какой из атрибутов в JSX написан неправильно?",
      "answers": [
        "tabIndex",
        "for",
        "data-close",
        "className"
      ],
      "correctAnswer": "for",
      "skipped": false
    },
    {
      "id": 10,
      "description": "Какой из предложенных вариантов использования хука useEffect() реализует метод жизненного цикла componentDidUpdate:",
      "answers": [
        "useEffect(() => { … исполняемый код }, [])",
        "useEffect(() => { … исполняемый код return(() => { … исполняемый код }); }, [])",
        "useEffect(() => { … исполняемый код зависящий от переменной value }, [value])",
        "Ни один из перечисленных"
      ],
      "correctAnswer": "useEffect(() => { … исполняемый код зависящий от переменной value }, [value])",
      "skipped": false
    }
  ],
  "difficulties": [
    {
      "id": 1,
      "name": "Легкий",
      "isAvailable": true
    },
    {
      "id": 2,
      "name": "Средний",
      "isAvailable": false
    },
    {
      "id": 3,
      "name": "Сложный",
      "isAvailable": false
    }
  ],
  "currentDifficulty": {
    "currentDifficulty": "Легкий"
  },
  "indexOfCurrentQuestion": {
    "indexOfCurrentQuestion": 1
  },
  "answers": {
    "amountOfCorrectAnswers": 0
  },
  "isQuizStarted": {
    "isQuizStarted": true
  },
  "isQuizOver": {
    "isQuizOver": false
  },
  "checkSkipped": {
    "checkSkipped": false
  }
}